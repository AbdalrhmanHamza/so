---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Share from '../components/indexshare.astro'
import Scroll from '../components/scroll.astro'
import {
  SITE_TITLE,
  SITE_DESCRIPTION,
  HOMEPAGE_URL,
  SITE_KEYWORDS
} from '../config'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { IoArrowForward } from 'react-icons/io5/index.js'
import { Image } from '@astrojs/image/components'
// import '../styles/max.css'

const posts = (await Astro.glob('./posts/*.md')).sort(
  (a: any, b: any) =>
    new Date(b.frontmatter.createdAt).valueOf() -
    new Date(a.frontmatter.createdAt).valueOf()
)
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      keywords={SITE_KEYWORDS}
      title={SITE_TITLE}
      description={SITE_DESCRIPTION}
    />
    <style>
      .max-w-4xl {
        max-width: 74rem;
      }
      .round {
        border: 2px solid;
      }
      .search-container {
        position: relative;
      }
      .icon-center {
        position: absolute;
        top: 50%;
        right: 1%;
        transform: translate(-50%, -50%);
      }
      .not-found {
        display: none;
        font-size: 1.4rem;
        font-weight: 600;
      }
      .p-3 {
        padding: 1rem !important;
      }
      .mb-5 {
        margin-bottom: 3rem !important;
      }
      .form-control {
        display: block;
        width: 100%;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.375rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }
    </style>
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-[56px]">
      <Content>
        <section>
          <h1 class="text-3xl">Solutions Blog</h1>
        </section>
        <section>
          <div class="search-container">
            <input
              type="text"
              class="form-control mb-5 p-3 bg-white color-white dark:bg-gray-900 placeholder-black dark:placeholder-warm-800 focus:bg-warm-800 dark:focus:bg-gray-800"
              placeholder="Type To search..."
              id="search-input"
            />
            <i class="fa-solid fa-magnifying-glass icon-center"></i>
          </div>
          <span class="not-found">No posts found.</span>
          <ul class="grid grid-cols-1 md:grid-cols-3 gap-4">
            {
              posts.map(post => (
                <li class="text-center mb-4 list-group-item">
                  <a href={post.url} class="round card">
                    <Image
                      class="thumb"
                      src={post.frontmatter.heroImage}
                      width={720 * 2}
                      aspectRatio={2.0}
                      alt="Thumbnail"
                    />
                    <article>
                      <header>
                        <h2 class="mt-3 text-xl font-bold">
                          {post.frontmatter.title}
                        </h2>
                      </header>
                      <span>{post.frontmatter.createdAt}</span>
                    </article>
                  </a>
                </li>
              ))
            }
          </ul>
        </section>
      </Content>
    </main>
    <Scroll />
    <Share />
    <Footer />
    <script is:inline>
      document
        .querySelector('#search-input')
        .addEventListener('input', filterList)
      function filterList() {
        const searchInput = document.querySelector('#search-input')
        const found = document.querySelector('.not-found')
        const filter = searchInput.value.toLowerCase()
        const listItems = document.querySelectorAll('.list-group-item')
        const filteredList = Array.from(listItems).filter(item => {
          let text = item.textContent
          return text.toLowerCase().includes(filter)
        })
        listItems.forEach(item => (item.style.display = 'none'))
        filteredList.forEach(item => (item.style.display = ''))
        found.style.display = filteredList.length ? 'none' : 'block'
      }
    </script>
  </Body>
</html>
