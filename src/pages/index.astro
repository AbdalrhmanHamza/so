---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Share from '../components/indexshare.astro'
import Scroll from '../components/scroll.astro'
import { SITE_TITLE, SITE_DESCRIPTION, SITE_KEYWORDS } from '../config'
import Body from '../components/Body.astro'
import Content from '../components/Content.astro'
import { Image } from '@astrojs/image/components'
import type { BlogPostFrontmatter } from '../types'
import { formatDate } from '../utils'
import { formatBlogPosts } from '../js/utils'
import '../styles/max.css'

// const allposts = await Astro.glob<BlogPostFrontmatter>('./posts/*.md')
const allposts = await Astro.glob('./posts/*.md')
const formattedPosts = formatBlogPosts(allposts)

// const posts = allposts.sort(
//   (a: any, b: any) =>
//     new Date(b.frontmatter.createdAt).valueOf() -
//     new Date(a.frontmatter.createdAt).valueOf()
// )
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      keywords={SITE_KEYWORDS}
      title={SITE_TITLE}
      description={SITE_DESCRIPTION}
    />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-[56px]">
      <Content>
        <section>
          <h1 class="text-3xl font-mono">{SITE_TITLE}</h1>
        </section>
        <section>
          <div class="search-container">
            <input
              type="text"
              class="form-control mb-5 p-3 bg-white color-white dark:border-white dark:bg-gray-900 placeholder-black dark:placeholder-warm-800 focus:bg-warm-800 dark:focus:bg-gray-800"
              placeholder="Type To search..."
              id="search-input"
            />
            <i class="fa-solid fa-magnifying-glass icon-center"></i>
          </div>
          <span class="not-found">No posts found.</span>
          <ul class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4">
            {
              formattedPosts.map(post => (
                <li class="text-center mb-4 list-group-item round card dark:hover:bg-cardbg-800 hover:bg-cardbg-100">
                  <a href={post.url}>
                    <a href={post.url} class="active-anchor">
                      <figure>
                        <Image
                          class="thumb"
                          src={post.frontmatter.heroImage}
                          width={720 * 2}
                          aspectRatio={1.9}
                          alt={
                            'Post Thumbnail' + ` : ${post.frontmatter.title}`
                          }
                          title={
                            'Post Thumbnail' + ` : ${post.frontmatter.title}`
                          }
                        />
                      </figure>
                    </a>
                    <article>
                      <header>
                        <h2 class="mt-3 text-size dark:text-white ">
                          <a href={post.url} class="hover:underline">
                            {post.frontmatter.title}
                          </a>
                        </h2>
                        <p class="font-normal dark:text-white desc-mar opacity-90 text-left ">
                          {post.frontmatter.description}
                        </p>
                      </header>
                      <time class=" font-sans">
                        {formatDate(post.frontmatter.createdAt)}
                      </time>
                    </article>
                    <a href={post.url} />
                  </a>
                </li>
              ))
            }
          </ul>
        </section>
      </Content>
    </main>
    <Scroll />
    <Share />
    <Footer />
    <script is:inline>
      document
        .querySelector('#search-input')
        .addEventListener('input', filterList)
      function filterList() {
        const searchInput = document.querySelector('#search-input')
        const found = document.querySelector('.not-found')
        const filter = searchInput.value.toLowerCase()
        const listItems = document.querySelectorAll('.list-group-item')
        const filteredList = Array.from(listItems).filter(item => {
          let text = item.textContent
          return text.toLowerCase().includes(filter)
        })
        listItems.forEach(item => (item.style.display = 'none'))
        filteredList.forEach(item => (item.style.display = ''))
        found.style.display = filteredList.length ? 'none' : 'block'
      }
    </script>
  </Body>


</html>
